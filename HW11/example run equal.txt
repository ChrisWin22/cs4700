This trace is generated by running the following code:
(def listp (a) 
    (not (atom a)))
(set x 1)
(set q (quote (x 2)))
(set p (quote (1 4)))
# # tests that two nested lists are the same structure with the same contents
(def equal (a b)
    (if (eq a b) 
        True 
        (if (or (not (listp a)) 
                (not (listp b))) 
            False 
            (and (equal (first a) (first b)) 
                  (equal (rest a) (rest b))))))
(equal q p)


%run "C:\Users\nickf\Dropbox\Classes\CS4700 Spring 2020\eL interpreter\eLinterpreter.py"
Reading C:/Users/nickf/Dropbox/Classes/CS4700 Spring 2020/eL interpreter/code.el
Create function binding: listp = [['a'], [['not', ['atom', 'a']]]]
Evaluating set x = 1
|  Eval 1
|  Ans  1 
Create set variable binding: x = 1
Evaluating set q = ['quote', ['x', 2]]
|  Eval ['quote', ['x', 2]]
|  Ans  ['x', 2] 
Create set variable binding: q = ['x', 2]
Evaluating set p = ['quote', [1, 4]]
|  Eval ['quote', [1, 4]]
|  Ans  [1, 4] 
Create set variable binding: p = [1, 4]
Create function binding: equal = [['a', 'b'], [['if', ['eq', 'a', 'b'], 'True', ['if', ['or', ['not', ['listp', 'a']], ['not', ['listp', 'b']]], 'False', ['and', ['equal', ['first', 'a'], ['first', 'b']], ['equal', ['rest', 'a'], ['rest', 'b']]]]]]]
Eval ['equal', 'q', 'p']
|  Calling function equal
|  Found Value of equal as (['a', 'b'], [['if', ['eq', 'a', 'b'], 'True', ['if', ['or', ['not', ['listp', 'a']], ['not', ['listp', 'b']]], 'False', ['and', ['equal', ['first', 'a'], ['first', 'b']], ['equal', ['rest', 'a'], ['rest', 'b']]]]]])
|  |  Eval q
|  |  Found Value of q as ['x', 2]
|  |  Ans  ['x', 2] 
|  Create parameter-value binding: a = ['x', 2]
|  |  Eval p
|  |  Found Value of p as [1, 4]
|  |  Ans  [1, 4] 
|  Create parameter-value binding: b = [1, 4]
|  |  Eval ['if', ['eq', 'a', 'b'], 'True', ['if', ['or', ['not', ['listp', 'a']], ['not', ['listp', 'b']]], 'False', ['and', ['equal', ['first', 'a'], ['first', 'b']], ['equal', ['rest', 'a'], ['rest', 'b']]]]]
|  |  |  Eval ['eq', 'a', 'b']
|  |  |  |  Eval a
|  |  |  |  Found Value of a as ['x', 2]
|  |  |  |  Ans  ['x', 2] 
|  |  |  |  Eval b
|  |  |  |  Found Value of b as [1, 4]
|  |  |  |  Ans  [1, 4] 
|  |  |  Ans  False 
|  |  |  Eval ['if', ['or', ['not', ['listp', 'a']], ['not', ['listp', 'b']]], 'False', ['and', ['equal', ['first', 'a'], ['first', 'b']], ['equal', ['rest', 'a'], ['rest', 'b']]]]
|  |  |  |  Eval ['or', ['not', ['listp', 'a']], ['not', ['listp', 'b']]]
|  |  |  |  |  Eval ['not', ['listp', 'a']]
|  |  |  |  |  |  Eval ['listp', 'a']
|  |  |  |  |  |  |  Calling function listp
|  |  |  |  |  |  |  Looking for listp
|  |  |  |  |  |  |  Found Value of listp as (['a'], [['not', ['atom', 'a']]])
|  |  |  |  |  |  |  |  Eval a
|  |  |  |  |  |  |  |  Found Value of a as ['x', 2]
|  |  |  |  |  |  |  |  Ans  ['x', 2] 
|  |  |  |  |  |  |  Create parameter-value binding: a = ['x', 2]
|  |  |  |  |  |  |  |  Eval ['not', ['atom', 'a']]
|  |  |  |  |  |  |  |  |  Eval ['atom', 'a']
|  |  |  |  |  |  |  |  |  |  Eval a
|  |  |  |  |  |  |  |  |  |  Found Value of a as ['x', 2]
|  |  |  |  |  |  |  |  |  |  Ans  ['x', 2] 
|  |  |  |  |  |  |  |  |  Ans  False 
|  |  |  |  |  |  |  |  Ans  True 
|  |  |  |  |  |  Ans  True 
|  |  |  |  |  Ans  False 
|  |  |  |  |  Eval ['not', ['listp', 'b']]
|  |  |  |  |  |  Eval ['listp', 'b']
|  |  |  |  |  |  |  Calling function listp
|  |  |  |  |  |  |  Looking for listp
|  |  |  |  |  |  |  Found Value of listp as (['a'], [['not', ['atom', 'a']]])
|  |  |  |  |  |  |  |  Eval b
|  |  |  |  |  |  |  |  Found Value of b as [1, 4]
|  |  |  |  |  |  |  |  Ans  [1, 4] 
|  |  |  |  |  |  |  Create parameter-value binding: a = [1, 4]
|  |  |  |  |  |  |  |  Eval ['not', ['atom', 'a']]
|  |  |  |  |  |  |  |  |  Eval ['atom', 'a']
|  |  |  |  |  |  |  |  |  |  Eval a
|  |  |  |  |  |  |  |  |  |  Found Value of a as [1, 4]
|  |  |  |  |  |  |  |  |  |  Ans  [1, 4] 
|  |  |  |  |  |  |  |  |  Ans  False 
|  |  |  |  |  |  |  |  Ans  True 
|  |  |  |  |  |  Ans  True 
|  |  |  |  |  Ans  False 
|  |  |  |  Ans  False 
|  |  |  |  Eval ['and', ['equal', ['first', 'a'], ['first', 'b']], ['equal', ['rest', 'a'], ['rest', 'b']]]
|  |  |  |  |  Eval ['equal', ['first', 'a'], ['first', 'b']]
|  |  |  |  |  |  Calling function equal
|  |  |  |  |  |  Looking for equal
|  |  |  |  |  |  Found Value of equal as (['a', 'b'], [['if', ['eq', 'a', 'b'], 'True', ['if', ['or', ['not', ['listp', 'a']], ['not', ['listp', 'b']]], 'False', ['and', ['equal', ['first', 'a'], ['first', 'b']], ['equal', ['rest', 'a'], ['rest', 'b']]]]]])
|  |  |  |  |  |  |  Eval ['first', 'a']
|  |  |  |  |  |  |  |  Eval a
|  |  |  |  |  |  |  |  Found Value of a as ['x', 2]
|  |  |  |  |  |  |  |  Ans  ['x', 2] 
|  |  |  |  |  |  |  Ans  x 
|  |  |  |  |  |  Create parameter-value binding: a = x
|  |  |  |  |  |  |  Eval ['first', 'b']
|  |  |  |  |  |  |  |  Eval b
|  |  |  |  |  |  |  |  Found Value of b as [1, 4]
|  |  |  |  |  |  |  |  Ans  [1, 4] 
|  |  |  |  |  |  |  Ans  1 
|  |  |  |  |  |  Create parameter-value binding: b = 1
|  |  |  |  |  |  |  Eval ['if', ['eq', 'a', 'b'], 'True', ['if', ['or', ['not', ['listp', 'a']], ['not', ['listp', 'b']]], 'False', ['and', ['equal', ['first', 'a'], ['first', 'b']], ['equal', ['rest', 'a'], ['rest', 'b']]]]]
|  |  |  |  |  |  |  |  Eval ['eq', 'a', 'b']
|  |  |  |  |  |  |  |  |  Eval a
|  |  |  |  |  |  |  |  |  Found Value of a as x
|  |  |  |  |  |  |  |  |  Ans  x 
|  |  |  |  |  |  |  |  |  Eval b
|  |  |  |  |  |  |  |  |  Found Value of b as 1
|  |  |  |  |  |  |  |  |  Ans  1 
|  |  |  |  |  |  |  |  Ans  False 
|  |  |  |  |  |  |  |  Eval ['if', ['or', ['not', ['listp', 'a']], ['not', ['listp', 'b']]], 'False', ['and', ['equal', ['first', 'a'], ['first', 'b']], ['equal', ['rest', 'a'], ['rest', 'b']]]]
|  |  |  |  |  |  |  |  |  Eval ['or', ['not', ['listp', 'a']], ['not', ['listp', 'b']]]
|  |  |  |  |  |  |  |  |  |  Eval ['not', ['listp', 'a']]
|  |  |  |  |  |  |  |  |  |  |  Eval ['listp', 'a']
|  |  |  |  |  |  |  |  |  |  |  |  Calling function listp
|  |  |  |  |  |  |  |  |  |  |  |  Looking for listp
|  |  |  |  |  |  |  |  |  |  |  |  Looking for listp
|  |  |  |  |  |  |  |  |  |  |  |  Found Value of listp as (['a'], [['not', ['atom', 'a']]])
|  |  |  |  |  |  |  |  |  |  |  |  |  Eval a
|  |  |  |  |  |  |  |  |  |  |  |  |  Found Value of a as x
|  |  |  |  |  |  |  |  |  |  |  |  |  Ans  x 
|  |  |  |  |  |  |  |  |  |  |  |  Create parameter-value binding: a = x
|  |  |  |  |  |  |  |  |  |  |  |  |  Eval ['not', ['atom', 'a']]
|  |  |  |  |  |  |  |  |  |  |  |  |  |  Eval ['atom', 'a']
|  |  |  |  |  |  |  |  |  |  |  |  |  |  |  Eval a
|  |  |  |  |  |  |  |  |  |  |  |  |  |  |  Found Value of a as x
|  |  |  |  |  |  |  |  |  |  |  |  |  |  |  Ans  x 
|  |  |  |  |  |  |  |  |  |  |  |  |  |  Ans  True 
|  |  |  |  |  |  |  |  |  |  |  |  |  Ans  False 
|  |  |  |  |  |  |  |  |  |  |  Ans  False 
|  |  |  |  |  |  |  |  |  |  Ans  True 
|  |  |  |  |  |  |  |  |  Ans  True 
|  |  |  |  |  |  |  |  |  Eval False
|  |  |  |  |  |  |  |  |  Ans  False 
|  |  |  |  |  |  |  |  Ans  False 
|  |  |  |  |  |  |  Ans  False 
|  |  |  |  |  Ans  False 
|  |  |  |  Ans  False 
|  |  |  Ans  False 
|  |  Ans  False 
Ans  False 